version: '3.3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181"
    hostname: zookeeper
  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: docker-difel110185.eastus2.cloudapp.azure.com  # docker-machine ip
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://docker-difel110185.eastus2.cloudapp.azure.com:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - "zookeeper"
  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'events'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - my-db:/var/lib/mysql
      # Names our volum
  acit3855_service1:
    image: acit3855_service1
    restart: always
    ports: 
      - 8080:8080
    expose:
      - 8080
    depends_on:
      - "kafka"
    volumes:
      - ../config:/app/config
  acit3855_service2:
    image: acit3855_service2
    restart: always
    ports: 
      - 8090:8090
    expose:
      - 8090
    depends_on:
      - "acit3855_service1"
      - "db"
    volumes:
      - ../config:/app/config
  acit3855_service3:
    image: acit3855_service3
    restart: always
    ports: 
      - 8100:8100
    expose:
      - 8100
    depends_on:
      - "acit3855_service2"
    volumes:
      - ../config:/app/config
  acit3855_service4:
    image: acit3855_service4
    restart: always
    ports: 
      - 8110:8110
    expose:
      - 8110
    depends_on:
      - "acit3855_service3"
    volumes:
      - ../config:/app/config
volumes:
  my-db: 

